// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["driverAdapters"] //ensures prisma can operate smoothly with Neon in serverless environments.
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Section {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title      String
  tasksOrder String[] @default([])
  createdAt  DateTime @default(now()) @db.Timestamp(6)
  updatedAt  DateTime @updatedAt
  tasks      Task[]
}

model Task {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  sectionId String   @db.Uuid
  title     String
  tag       String
  dueDate   DateTime @db.Timestamp(6)
  user      Json     @db.Json
  createdAt DateTime @default(now()) @db.Timestamp(6)

  section Section @relation(fields: [sectionId], references: [id], onDelete: Cascade)
}
